#+TITLE: fslx
#+AUTHOR: Daniel Gomez
#+DATE: 14.12.2016

/fslx/ is a *dumb* wrapper around some of fsltools. It exists so I don't have to
remember the arbitrary names of fsl tools, nor the parameter naming
conventions of each of them.
There are probably thousands of tools like this one out there, but they weren't on
my search engine's top 3, so I had to write my own.

** Syntax

The usage syntax is the same for all operations:
~fslx op img1~

Or, if you want to process multiple files simultaneously:
~fslx op img1 img2 img3 ...~

Exceptions to the rule are simple to remember though, such as in the case of realignment:
~fslx reg reference img1 img2 img3~
And in the case of merging files, where FSLX does exactly what you would expect.


To make things even dummer, operations have alias so that you can type synonyms
and things just work. Alignment, for example, can be called with any of ~reg|align|register~.

** Supported operations

As of yet, FSLX supports the following:

| Operation | Effect | Pipeable | Original FSL name |

todo (meanwhile check code.)..

** Piping commands
You can use xargs to build a nice easy processing pipeline. Most operations are supported.
Example - motion correct, compute the tSNR, and remove NaNs of all 4D niftis in a directory:
~ls | xargs flsx moco | xargs fslx tsnr | xargs fslx nan~

For maximum efficiency, you can alias ~xargs fslx~:
#+BEGIN_SRC bash
alias xfslx='xargs fslx '
ls | xflsx moco | xfslx tsnr | xfslx nan
#+END_SRC
And then call the pipe with less verbosity.

Note: you get all of your intermediate results, so much sure you have enough disk space.

** Installation
Put fslx on your PATH.

#+BEGIN_SRC bash
git clone https://github.com/dangom/fslx.git
chmod +x fslx/fslx
currdir=`pwd`
echo 'export "PATH='$currdir'/fslx/:$PATH"' >> ~/.bashrc
#+END_SRC

** Dependencies
- FSL
- A Unix like environment with a sane shell available (Linux / MacOS).

** TO DO
- Support for applyxfm, registration to MNI, concatenate transformation matrices.
- FAST segmentation
- Support for Melodic ICA.
- Add support for dual_regression
- Add support for mixture modelling.
- Read from STDIN?

** Why?
-----
Pick one that suits you:

- Nipype takes too many lines of code and I have a PhD to finish.
- The lack of sleep makes me forget fsl commands, and the Wiki doesn't see much loving.
- FSL has decent defaults and 99% of the times I don't need to customize anything.


* Thanks
-----
The awesome [[https://fsl.fmrib.ox.ac.uk/fsl/fslwiki][FSL]].
The poweful BASH.

* Disclaimer

This tool is not a part of FSL. Use at your own risk.
